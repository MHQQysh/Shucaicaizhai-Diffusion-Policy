; Auto-generated. Do not edit!


(cl:in-package bmirobot_msg-msg)


;//! \htmlinclude Robot_fdstatus.msg.html

(cl:defclass <Robot_fdstatus> (roslisp-msg-protocol:ros-message)
  ((mt_mode
    :reader mt_mode
    :initarg :mt_mode
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Gpst
    :reader mt_Gpst
    :initarg :mt_Gpst
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Cpst
    :reader mt_Cpst
    :initarg :mt_Cpst
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Lpst
    :reader mt_Lpst
    :initarg :mt_Lpst
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Gspd
    :reader mt_Gspd
    :initarg :mt_Gspd
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Cspd
    :reader mt_Cspd
    :initarg :mt_Cspd
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Lspd
    :reader mt_Lspd
    :initarg :mt_Lspd
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Gtq
    :reader mt_Gtq
    :initarg :mt_Gtq
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_PWMduty
    :reader mt_PWMduty
    :initarg :mt_PWMduty
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Gtime
    :reader mt_Gtime
    :initarg :mt_Gtime
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Ctime
    :reader mt_Ctime
    :initarg :mt_Ctime
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_Rtime
    :reader mt_Rtime
    :initarg :mt_Rtime
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_sysclk
    :reader mt_sysclk
    :initarg :mt_sysclk
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_smptime
    :reader mt_smptime
    :initarg :mt_smptime
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_cputmp
    :reader mt_cputmp
    :initarg :mt_cputmp
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_mttmp
    :reader mt_mttmp
    :initarg :mt_mttmp
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_invlt
    :reader mt_invlt
    :initarg :mt_invlt
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_incrt
    :reader mt_incrt
    :initarg :mt_incrt
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_PWMfrq
    :reader mt_PWMfrq
    :initarg :mt_PWMfrq
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_ecd
    :reader mt_ecd
    :initarg :mt_ecd
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0))
   (mt_ecdcnt
    :reader mt_ecdcnt
    :initarg :mt_ecdcnt
    :type (cl:vector cl:integer)
   :initform (cl:make-array 9 :element-type 'cl:integer :initial-element 0)))
)

(cl:defclass Robot_fdstatus (<Robot_fdstatus>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <Robot_fdstatus>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'Robot_fdstatus)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name bmirobot_msg-msg:<Robot_fdstatus> is deprecated: use bmirobot_msg-msg:Robot_fdstatus instead.")))

(cl:ensure-generic-function 'mt_mode-val :lambda-list '(m))
(cl:defmethod mt_mode-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_mode-val is deprecated.  Use bmirobot_msg-msg:mt_mode instead.")
  (mt_mode m))

(cl:ensure-generic-function 'mt_Gpst-val :lambda-list '(m))
(cl:defmethod mt_Gpst-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Gpst-val is deprecated.  Use bmirobot_msg-msg:mt_Gpst instead.")
  (mt_Gpst m))

(cl:ensure-generic-function 'mt_Cpst-val :lambda-list '(m))
(cl:defmethod mt_Cpst-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Cpst-val is deprecated.  Use bmirobot_msg-msg:mt_Cpst instead.")
  (mt_Cpst m))

(cl:ensure-generic-function 'mt_Lpst-val :lambda-list '(m))
(cl:defmethod mt_Lpst-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Lpst-val is deprecated.  Use bmirobot_msg-msg:mt_Lpst instead.")
  (mt_Lpst m))

(cl:ensure-generic-function 'mt_Gspd-val :lambda-list '(m))
(cl:defmethod mt_Gspd-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Gspd-val is deprecated.  Use bmirobot_msg-msg:mt_Gspd instead.")
  (mt_Gspd m))

(cl:ensure-generic-function 'mt_Cspd-val :lambda-list '(m))
(cl:defmethod mt_Cspd-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Cspd-val is deprecated.  Use bmirobot_msg-msg:mt_Cspd instead.")
  (mt_Cspd m))

(cl:ensure-generic-function 'mt_Lspd-val :lambda-list '(m))
(cl:defmethod mt_Lspd-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Lspd-val is deprecated.  Use bmirobot_msg-msg:mt_Lspd instead.")
  (mt_Lspd m))

(cl:ensure-generic-function 'mt_Gtq-val :lambda-list '(m))
(cl:defmethod mt_Gtq-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Gtq-val is deprecated.  Use bmirobot_msg-msg:mt_Gtq instead.")
  (mt_Gtq m))

(cl:ensure-generic-function 'mt_PWMduty-val :lambda-list '(m))
(cl:defmethod mt_PWMduty-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_PWMduty-val is deprecated.  Use bmirobot_msg-msg:mt_PWMduty instead.")
  (mt_PWMduty m))

(cl:ensure-generic-function 'mt_Gtime-val :lambda-list '(m))
(cl:defmethod mt_Gtime-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Gtime-val is deprecated.  Use bmirobot_msg-msg:mt_Gtime instead.")
  (mt_Gtime m))

(cl:ensure-generic-function 'mt_Ctime-val :lambda-list '(m))
(cl:defmethod mt_Ctime-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Ctime-val is deprecated.  Use bmirobot_msg-msg:mt_Ctime instead.")
  (mt_Ctime m))

(cl:ensure-generic-function 'mt_Rtime-val :lambda-list '(m))
(cl:defmethod mt_Rtime-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_Rtime-val is deprecated.  Use bmirobot_msg-msg:mt_Rtime instead.")
  (mt_Rtime m))

(cl:ensure-generic-function 'mt_sysclk-val :lambda-list '(m))
(cl:defmethod mt_sysclk-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_sysclk-val is deprecated.  Use bmirobot_msg-msg:mt_sysclk instead.")
  (mt_sysclk m))

(cl:ensure-generic-function 'mt_smptime-val :lambda-list '(m))
(cl:defmethod mt_smptime-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_smptime-val is deprecated.  Use bmirobot_msg-msg:mt_smptime instead.")
  (mt_smptime m))

(cl:ensure-generic-function 'mt_cputmp-val :lambda-list '(m))
(cl:defmethod mt_cputmp-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_cputmp-val is deprecated.  Use bmirobot_msg-msg:mt_cputmp instead.")
  (mt_cputmp m))

(cl:ensure-generic-function 'mt_mttmp-val :lambda-list '(m))
(cl:defmethod mt_mttmp-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_mttmp-val is deprecated.  Use bmirobot_msg-msg:mt_mttmp instead.")
  (mt_mttmp m))

(cl:ensure-generic-function 'mt_invlt-val :lambda-list '(m))
(cl:defmethod mt_invlt-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_invlt-val is deprecated.  Use bmirobot_msg-msg:mt_invlt instead.")
  (mt_invlt m))

(cl:ensure-generic-function 'mt_incrt-val :lambda-list '(m))
(cl:defmethod mt_incrt-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_incrt-val is deprecated.  Use bmirobot_msg-msg:mt_incrt instead.")
  (mt_incrt m))

(cl:ensure-generic-function 'mt_PWMfrq-val :lambda-list '(m))
(cl:defmethod mt_PWMfrq-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_PWMfrq-val is deprecated.  Use bmirobot_msg-msg:mt_PWMfrq instead.")
  (mt_PWMfrq m))

(cl:ensure-generic-function 'mt_ecd-val :lambda-list '(m))
(cl:defmethod mt_ecd-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_ecd-val is deprecated.  Use bmirobot_msg-msg:mt_ecd instead.")
  (mt_ecd m))

(cl:ensure-generic-function 'mt_ecdcnt-val :lambda-list '(m))
(cl:defmethod mt_ecdcnt-val ((m <Robot_fdstatus>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader bmirobot_msg-msg:mt_ecdcnt-val is deprecated.  Use bmirobot_msg-msg:mt_ecdcnt instead.")
  (mt_ecdcnt m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <Robot_fdstatus>) ostream)
  "Serializes a message object of type '<Robot_fdstatus>"
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_mode))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Gpst))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Cpst))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Lpst))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Gspd))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Cspd))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Lspd))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Gtq))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_PWMduty))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Gtime))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Ctime))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_Rtime))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_sysclk))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_smptime))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_cputmp))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_mttmp))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_invlt))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_incrt))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_PWMfrq))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_ecd))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'mt_ecdcnt))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <Robot_fdstatus>) istream)
  "Deserializes a message object of type '<Robot_fdstatus>"
  (cl:setf (cl:slot-value msg 'mt_mode) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_mode)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Gpst) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Gpst)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Cpst) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Cpst)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Lpst) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Lpst)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Gspd) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Gspd)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Cspd) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Cspd)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Lspd) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Lspd)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Gtq) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Gtq)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_PWMduty) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_PWMduty)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Gtime) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Gtime)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Ctime) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Ctime)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_Rtime) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_Rtime)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_sysclk) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_sysclk)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_smptime) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_smptime)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_cputmp) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_cputmp)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_mttmp) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_mttmp)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_invlt) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_invlt)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_incrt) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_incrt)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_PWMfrq) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_PWMfrq)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_ecd) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_ecd)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  (cl:setf (cl:slot-value msg 'mt_ecdcnt) (cl:make-array 9))
  (cl:let ((vals (cl:slot-value msg 'mt_ecdcnt)))
    (cl:dotimes (i 9)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296))))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<Robot_fdstatus>)))
  "Returns string type for a message object of type '<Robot_fdstatus>"
  "bmirobot_msg/Robot_fdstatus")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'Robot_fdstatus)))
  "Returns string type for a message object of type 'Robot_fdstatus"
  "bmirobot_msg/Robot_fdstatus")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<Robot_fdstatus>)))
  "Returns md5sum for a message object of type '<Robot_fdstatus>"
  "96575b502188e773da8e23f3a4f7ae68")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'Robot_fdstatus)))
  "Returns md5sum for a message object of type 'Robot_fdstatus"
  "96575b502188e773da8e23f3a4f7ae68")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<Robot_fdstatus>)))
  "Returns full string definition for message of type '<Robot_fdstatus>"
  (cl:format cl:nil "int32[9] mt_mode~%int32[9] mt_Gpst~%int32[9] mt_Cpst~%int32[9] mt_Lpst~%int32[9] mt_Gspd~%int32[9] mt_Cspd~%int32[9] mt_Lspd~%int32[9] mt_Gtq~%int32[9] mt_PWMduty~%int32[9] mt_Gtime~%int32[9] mt_Ctime~%int32[9] mt_Rtime~%int32[9] mt_sysclk~%int32[9] mt_smptime~%int32[9] mt_cputmp~%int32[9] mt_mttmp~%int32[9] mt_invlt~%int32[9] mt_incrt~%int32[9] mt_PWMfrq~%int32[9] mt_ecd~%int32[9] mt_ecdcnt~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'Robot_fdstatus)))
  "Returns full string definition for message of type 'Robot_fdstatus"
  (cl:format cl:nil "int32[9] mt_mode~%int32[9] mt_Gpst~%int32[9] mt_Cpst~%int32[9] mt_Lpst~%int32[9] mt_Gspd~%int32[9] mt_Cspd~%int32[9] mt_Lspd~%int32[9] mt_Gtq~%int32[9] mt_PWMduty~%int32[9] mt_Gtime~%int32[9] mt_Ctime~%int32[9] mt_Rtime~%int32[9] mt_sysclk~%int32[9] mt_smptime~%int32[9] mt_cputmp~%int32[9] mt_mttmp~%int32[9] mt_invlt~%int32[9] mt_incrt~%int32[9] mt_PWMfrq~%int32[9] mt_ecd~%int32[9] mt_ecdcnt~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <Robot_fdstatus>))
  (cl:+ 0
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_mode) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Gpst) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Cpst) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Lpst) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Gspd) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Cspd) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Lspd) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Gtq) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_PWMduty) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Gtime) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Ctime) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_Rtime) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_sysclk) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_smptime) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_cputmp) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_mttmp) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_invlt) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_incrt) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_PWMfrq) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_ecd) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     0 (cl:reduce #'cl:+ (cl:slot-value msg 'mt_ecdcnt) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <Robot_fdstatus>))
  "Converts a ROS message object to a list"
  (cl:list 'Robot_fdstatus
    (cl:cons ':mt_mode (mt_mode msg))
    (cl:cons ':mt_Gpst (mt_Gpst msg))
    (cl:cons ':mt_Cpst (mt_Cpst msg))
    (cl:cons ':mt_Lpst (mt_Lpst msg))
    (cl:cons ':mt_Gspd (mt_Gspd msg))
    (cl:cons ':mt_Cspd (mt_Cspd msg))
    (cl:cons ':mt_Lspd (mt_Lspd msg))
    (cl:cons ':mt_Gtq (mt_Gtq msg))
    (cl:cons ':mt_PWMduty (mt_PWMduty msg))
    (cl:cons ':mt_Gtime (mt_Gtime msg))
    (cl:cons ':mt_Ctime (mt_Ctime msg))
    (cl:cons ':mt_Rtime (mt_Rtime msg))
    (cl:cons ':mt_sysclk (mt_sysclk msg))
    (cl:cons ':mt_smptime (mt_smptime msg))
    (cl:cons ':mt_cputmp (mt_cputmp msg))
    (cl:cons ':mt_mttmp (mt_mttmp msg))
    (cl:cons ':mt_invlt (mt_invlt msg))
    (cl:cons ':mt_incrt (mt_incrt msg))
    (cl:cons ':mt_PWMfrq (mt_PWMfrq msg))
    (cl:cons ':mt_ecd (mt_ecd msg))
    (cl:cons ':mt_ecdcnt (mt_ecdcnt msg))
))
