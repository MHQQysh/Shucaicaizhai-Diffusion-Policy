// Generated by gencpp from file control_try/simulate.msg
// DO NOT EDIT!


#ifndef CONTROL_TRY_MESSAGE_SIMULATE_H
#define CONTROL_TRY_MESSAGE_SIMULATE_H

#include <ros/service_traits.h>


#include <control_try/simulateRequest.h>
#include <control_try/simulateResponse.h>


namespace control_try
{

struct simulate
{

typedef simulateRequest Request;
typedef simulateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct simulate
} // namespace control_try


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::control_try::simulate > {
  static const char* value()
  {
    return "ae9205cbd5f1c6bad0af84ae72824c48";
  }

  static const char* value(const ::control_try::simulate&) { return value(); }
};

template<>
struct DataType< ::control_try::simulate > {
  static const char* value()
  {
    return "control_try/simulate";
  }

  static const char* value(const ::control_try::simulate&) { return value(); }
};


// service_traits::MD5Sum< ::control_try::simulateRequest> should match
// service_traits::MD5Sum< ::control_try::simulate >
template<>
struct MD5Sum< ::control_try::simulateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::control_try::simulate >::value();
  }
  static const char* value(const ::control_try::simulateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::control_try::simulateRequest> should match
// service_traits::DataType< ::control_try::simulate >
template<>
struct DataType< ::control_try::simulateRequest>
{
  static const char* value()
  {
    return DataType< ::control_try::simulate >::value();
  }
  static const char* value(const ::control_try::simulateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::control_try::simulateResponse> should match
// service_traits::MD5Sum< ::control_try::simulate >
template<>
struct MD5Sum< ::control_try::simulateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::control_try::simulate >::value();
  }
  static const char* value(const ::control_try::simulateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::control_try::simulateResponse> should match
// service_traits::DataType< ::control_try::simulate >
template<>
struct DataType< ::control_try::simulateResponse>
{
  static const char* value()
  {
    return DataType< ::control_try::simulate >::value();
  }
  static const char* value(const ::control_try::simulateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CONTROL_TRY_MESSAGE_SIMULATE_H
